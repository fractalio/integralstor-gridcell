%include /tmp/part-include

# platform=x86_64, AMD64, or Intel EM64T
# version=master

# Firewall configuration
firewall --disabled

# Install OS instead of upgrade
install
unsupported_hardware

# Use network installation
url --url="http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_gridcell/v1.0/iso"
repo --name=extrasRepo --baseurl=http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_gridcell/v1.0/gridcell_repository_zfs_0658_gluster_3716

# Root password
rootpw --iscrypted $1$NdB3lmS6$oXH5W2QCg4d6syxgE1GTA0 

# System authorization information
auth  --useshadow  --passalgo=sha512

# Use text mode install
text

# System keyboard
keyboard us

# System language
lang en_US

# SELinux configuration
selinux --disabled

# Do not configure the X Window System
skipx

# Installation logging level
logging --level=info

# Reboot after installation
reboot --eject

# System timezone
timezone  Asia/Kolkata

# Post installation section. You can specify any commands you want executed once
# installation has finished in this section. In this example, the system is
# updated and the output is logged to the post_install.log file.
# Keep in mind that any commands that execute in the post installation section are
# chrooted by default.

%pre --log=/root/ks-pre.log

clear >/dev/tty5
echo >/dev/tty5

exec < /dev/tty5 > /dev/tty5 2>&1
/usr/bin/chvt 5

#!/bin/sh
DIR="/sys/block"
MAXBOOTSIZE=800
MINBOOTSIZE=1
PATH="/dev"

### asking user for hardware specific entry ###
read -p "(optional) Enter hardware vendor for gridcell installation else press <ENTER>:" vend

if [[ -n "$vend" ]]; then
  echo { \"platform\": \"gridcell\", > /tmp/platform
  echo \"hardware_vendor\" : \"$vend\" } >> /tmp/platform
  echo "Entered vendor is: $vend"
else
  echo { \"platform\": \"gridcell\" } > /tmp/platform
  echo "platform is 'gridcell'"
fi


### Running a for loop on Disks available among one will be selected by user/admin for OS to Install ###
echo
echo "Available disks and their size:"
for DEV in sd{a..z} ; do
  if [ -b "/dev/$DEV" ] ; then
    SIZE=`/usr/bin/cat $DIR/$DEV/size`
    GB=$(($SIZE/2**21))
    echo "Disk : " $DEV " : Size : " $GB "GB"
  fi
done

echo
echo "Preferred disks to install Operating System and their size: "
for DEV in sd{a..z} ; do
  if [ -b "/dev/$DEV" ] ; then
    SIZE=`/usr/bin/cat $DIR/$DEV/size`
    GB=$(($SIZE/2**21))
    if [ "$GB" -le "$MAXBOOTSIZE" ]
        then
            if [ "$GB" -ge "$MINBOOTSIZE" ]
                then
                device=$DEV
                echo "Disk : "$device" : Size : "$GB "GB"
            fi
    fi
  fi
done

echo
echo "(NOTE: Make sure that you have inserted two disks of same size to mirror the OS (To exit Press Ctrl+Alt+Del))"

while true; do
  read -p "Do you want to mirror the operating system drive? (y/n):" input
  case $input in
    [yY] )
        read -p "Select the first mirrored OS drive (eg. sda):" bootdevice1
        read -p "Slect the second mirrored OS drive (eg. sdb):" bootdevice2
          size1=`/usr/bin/cat $DIR/$bootdevice1/size`
          size2=`/usr/bin/cat $DIR/$bootdevice2/size`
            if [[ "$size1" == "$size2" ]] ; then
              read -p "Select the swap size in MB.[Eg. 16384(for 8GB) OR 32768(for 16GB)]:" swsize1
              echo "#partitioning scheme generated in %pre for 3 drives" > /tmp/part-include
              echo "bootloader --location=mbr --driveorder=$bootdevice1,$bootdevice2" >> /tmp/part-include
              echo "zerombr" >> /tmp/part-include

              # final raid configurations
                while true; do
                 read -p "Do you want custom partitions? (y/n):" cust_part
                 case $cust_part in
                  [yY] )
                   read -p "Enter partition sizes for boot,home,opt,root(in MB)[use space between values]:" boot home opt root
                   /bin/sleep 2
                   echo "part raid.11    --size $boot    --asprimary     --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.12    --size $swsize1 --asprimary     --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.13    --size $home    --asprimary     --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.14    --size $opt                     --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.15    --size $root                    --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.16    --size 1        --grow          --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.21    --size 1024     --asprimary     --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.22    --size $swsize1 --asprimary     --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.23    --size 10240    --asprimary     --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.24    --size 10240                    --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.25    --size 10240                    --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.26    --size 10240    --grow          --ondrive=$bootdevice2" >> /tmp/part-include
                   # You can add --spares=x  
                   echo "raid /boot      --fstype ext4   --device md0    --level=RAID1 raid.11 raid.21" >> /tmp/part-include
                   echo "raid swap       --fstype swap   --device md1    --level=RAID1 raid.12 raid.22" >> /tmp/part-include
                   echo "raid /home      --fstype ext4   --device md2    --level=RAID1 raid.13 raid.23" >> /tmp/part-include
                   echo "raid /opt       --fstype ext4   --device md3    --level=RAID1 raid.14 raid.24" >> /tmp/part-include
                   echo "raid /          --fstype ext4   --device md4    --level=RAID1 raid.15 raid.25" >> /tmp/part-include
                   echo "raid /var       --fstype ext4   --device md5    --level=RAID1 raid.16 raid.26" >> /tmp/part-include
                   echo "Committed partition sizes: boot=$boot MB, home=$home MB, opt=$opt MB, root=$root MB"
                   /bin/sleep 2
                   break;;
                  [nN] )
                   echo "Using default values for partition..."
                   # final raid configurations
                   echo "part raid.11    --size 1024     --asprimary     --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.12    --size $swsize1 --asprimary     --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.13    --size 10240    --asprimary     --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.14    --size 10240                    --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.15    --size 10240                    --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.16    --size 1        --grow          --ondrive=$bootdevice1" >> /tmp/part-include
                   echo "part raid.21    --size 1024     --asprimary     --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.22    --size $swsize1 --asprimary     --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.23    --size 10240    --asprimary     --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.24    --size 10240                    --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.25    --size 10240                    --ondrive=$bootdevice2" >> /tmp/part-include
                   echo "part raid.26    --size 10240    --grow          --ondrive=$bootdevice2" >> /tmp/part-include
                   # You can add --spares=x  
                   echo "raid /boot      --fstype ext4   --device md0    --level=RAID1 raid.11 raid.21" >> /tmp/part-include
                   echo "raid swap       --fstype swap   --device md1    --level=RAID1 raid.12 raid.22" >> /tmp/part-include
                   echo "raid /home      --fstype ext4   --device md2    --level=RAID1 raid.13 raid.23" >> /tmp/part-include
                   echo "raid /opt       --fstype ext4   --device md3    --level=RAID1 raid.14 raid.24" >> /tmp/part-include
                   echo "raid /          --fstype ext4   --device md4    --level=RAID1 raid.15 raid.25" >> /tmp/part-include
                   echo "raid /var       --fstype ext4   --device md5    --level=RAID1 raid.16 raid.26" >> /tmp/part-include
                   echo "Committed partition sizes: boot=1024 MB, home=10240 MB, opt=10240 MB, root=10240 MB"
                   /bin/sleep 2
                   break;;                      
                  * ) echo "Please answer yes(y) or no(n) to continue...";;
                 esac
                done
                while true; do
                  read -p "Do you want to clear prtitions of all disks? (y/n):" partselect1
                  case $partselect1 in
                    [yY] )  echo "clearpart --all" >> /tmp/part-include; break;;
                    [nN] )  echo "clearpart --drives=$bootdevice1,$bootdevice2 --all" >> /tmp/part-include; break;;
                    * ) echo "Please answer yes(y) or no(n) to continue...";;
                  esac
                done
            else
              echo "Error occured!!! found different size disks can't mirror OS. Exiting..."
            fi
            break;;
    [nN] )

        read -p "Select the boot device (eg. sda):" bootdevice1
        read -p "Select the swap size in MB.[Eg. 16384(for 8GB) OR 32768(for 16GB)]:" swsize2
        echo "zerombr" >> /tmp/part-include
        echo "#partitioning scheme generated in %pre for 3 drives" > /tmp/part-include
        echo "bootloader --location=mbr" >>/tmp/part-include
        #echo "bootloader --location=mbr" >> /tmp/part-include
        # final raid configurations
        while true; do
         read -p "Do you want custom partitions? (y/n):" cust_part
         case $cust_part in
          [yY] )
           read -p "Enter partition sizes for boot,home,opt,root respectively(in MB)[use space while entering values]:" boot home opt root
           # final boot partitions
           echo "part /boot --fstype ext4 --size $boot --ondisk $bootdevice1" >> /tmp/part-include
           echo "part swap --fstype swap --size $swsize2 --ondisk $bootdevice1" >> /tmp/part-include
           echo "part /home --fstype ext4 --size $home --ondisk $bootdevice1" >> /tmp/part-include
           echo "part /opt --fstype ext4 --size $opt --ondisk $bootdevice1" >> /tmp/part-include
           echo "part / --fstype ext4 --size $root --ondisk $bootdevice1" >> /tmp/part-include
           echo "part /var --fstype ext4 --size 1 --grow --ondisk $bootdevice1" >> /tmp/part-include
           echo "Committed partition sizes: boot=$boot MB, home=$home MB, opt=$opt MB, root=$root MB"
           /bin/sleep 2
           break;;
          [nN] )
           echo "Using default values for partition..."
           # final boot partitions
           echo "part /boot --fstype ext4 --size 1024 --ondisk $bootdevice1" >> /tmp/part-include
           echo "part swap --fstype swap --size $swsize2 --ondisk $bootdevice1" >> /tmp/part-include
           echo "part /home --fstype ext4 --size 10240 --ondisk $bootdevice1" >> /tmp/part-include
           echo "part /opt --fstype ext4 --size 10240 --ondisk $bootdevice1" >> /tmp/part-include
           echo "part / --fstype ext4 --size 10240 --ondisk $bootdevice1" >> /tmp/part-include
           echo "part /var --fstype ext4 --size 1 --grow --ondisk $bootdevice1" >> /tmp/part-include
           echo "Committed partition sizes: boot=1024 MB, home=10240 MB, opt=10240 MB, root=10240 MB"
           /bin/sleep 2
           break;;                      
          * ) echo "Please answer yes(y) or no(n) to continue...";;
         esac
        done
        while true; do
          read -p "Do you want to clear prtitions of all disks? (y/n):" partselect2
          case $partselect2 in
            [yY] )  echo "clearpart --all" >> /tmp/part-include; break;;
            [nN] )  echo "clearpart --drives=$bootdevice1 --all" >> /tmp/part-include; break;;
            * ) echo "Please answer yes(y) or no(n) to continue...";;
          esac
        done
        break;;
    * ) echo "Please answer yes(y) or no(n) to continue...";;
    esac
done

/usr/bin/chvt 1

%end

%packages 
@core
@Compatibility libraries
salt-master
salt-minion
sg3_utils
perl-Config-General
scsi-target-utils
tuned
wget
smartmontools
glusterfs
glusterfs-fuse
glusterfs-server
glusterfs-api
glusterfs-api-devel
ctdb
samba-client
samba
samba-winbind
samba-winbind-clients
ipmitool
OpenIPMI
kernel-devel
zfs
krb5-workstation
ntp
nginx
kexec-tools
fractalio_django
python-devel
samba-vfs-glusterfs
iptraf
shellinabox
srvadmin-all
dell-system-update

%end

%post --nochroot --log=/mnt/sysimage/root/ks-post-nochroot.log
cp -rf /tmp/platform /mnt/sysimage/root
%end

%post --log=/root/ks-post-chroot.log

# Create the master and other required directories
mkdir -p /opt/integralstor
mkdir -p /run/samba
mkdir -p /var/log/integralstor/integralstor_gridcell
mkdir -p /opt/integralstor/integralstor_gridcell/tmp
mkdir -p /opt/integralstor/integralstor_gridcell/config
mkdir -p /tmp/logs
mkdir -p /etc/logrotate.d_old
touch /var/log/integralstor/integral_view.log

# Setup IntegralStor Common
cd /opt/integralstor
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_gridcell/v1.0/tar_installs/integralstor_utils.tar.gz
/bin/tar xzf integralstor_utils.tar.gz
ln -s /opt/integralstor/integralstor_utils/site-packages/integralstor_utils /usr/lib/python2.6/site-packages/integralstor_utils
rm -f /opt/integralstor/integralstor_utils.tar.gz

#Configure ZFS
rm -f /etc/modprobe.d/zfs.conf
ln -fs /opt/integralstor/integralstor_utils/install/conf_files/zfs.conf /etc/modprobe.d

# Setup IntegralStor GRIDCell
cd /opt/integralstor
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_gridcell/v1.0/tar_installs/integralstor_gridcell.tar.gz
/bin/tar xzf integralstor_gridcell.tar.gz
ln -s /opt/integralstor/integralstor_gridcell/site-packages/integralstor_gridcell /usr/lib/python2.6/site-packages/integralstor_gridcell
yes | cp -rf /root/platform /opt/integralstor/integralstor_gridcell
ln -s /opt/integralstor/integralstor_gridcell/platform /opt/integralstor
rm -f /opt/integralstor/integralstor_gridcell.tar.gz

#Install the common salt module
mkdir -p /srv/salt/_modules
cp -f /opt/integralstor/integralstor_gridcell/salt/_modules/* /srv/salt/_modules/

#Link the GRIDCell specific conf files
rm -f /etc/resolv.conf
cp /opt/integralstor/integralstor_gridcell/install/conf_files/resolv.conf /etc/resolv.conf
rm -f /etc/init/start-ttys.conf
cp /opt/integralstor/integralstor_gridcell/install/conf_files/start-ttys.conf /etc/init/start-ttys.conf
cp /opt/integralstor/integralstor_gridcell/install/conf_files/integralstor_gridcell_menu.conf /etc/init/integralstor_gridcell_menu.conf
rm -f /etc/nsswitch.conf
cp /opt/integralstor/integralstor_gridcell/install/conf_files/nsswitch.conf /etc/nsswitch.conf
cp -f /opt/integralstor/integralstor_gridcell/defaults/ntp/ntp.conf /etc
mv /etc/sysconfig/shellinaboxd /etc/sysconfig/shellinaboxd.bak
ln -s /opt/integralstor/integralstor_gridcell/install/conf_files/shellinaboxd /etc/sysconfig
#cd /tmp
#/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_gridcell/v1.0/shellinaboxd
#cp /tmp/shellinaboxd /etc/sysconfig

chmod 755 /opt/integralstor/integralstor_gridcell/scripts/python/*
chmod 755 /opt/integralstor/integralstor_gridcell/scripts/shell/*
chmod 755 /opt/integralstor/integralstor_gridcell/scripts/shell/*.sh

#Download and install the non-rpm based software..
cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_gridcell/v1.0/tar_installs/setuptools-11.3.1.tar.gz
/bin/tar xzf setuptools-11.3.1.tar.gz
cd setuptools-11.3.1
python setup.py install
rm -f setuptools-11.3.1.tar.gz

cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_gridcell/v1.0/tar_installs/libgfapi-python.tar.gz
tar xzf libgfapi-python.tar.gz
cd libgfapi-python
python setup.py install
rm -f libgfapi-python.tar.gz

cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_gridcell/v1.0/tar_installs/uwsgi-2.0.9.tar.gz
tar xzf uwsgi-2.0.9.tar.gz
cd uwsgi-2.0.9
python setup.py install
rm -f uwsgi-2.0.9.tar.gz

cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_gridcell/v1.0/tar_installs/netifaces-0.10.4.tar.gz
/bin/tar xzf netifaces-0.10.4.tar.gz
cd netifaces-0.10.4
python setup.py install
rm -f netifaces-0.10.4.tar.gz

cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_gridcell/v1.0/tar_installs/python-dateutil-2.4.2.tar.gz
tar xzf python-dateutil-2.4.2.tar.gz
cd python-dateutil-2.4.2
python setup.py install
rm -f python-dateutil-2.4.2.tar.gz

cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_gridcell/v1.0/tar_installs/python-crontab-1.9.3.tar.gz
tar xzf python-crontab-1.9.3.tar.gz
cd python-crontab-1.9.3
python setup.py install
rm -f python-crontab-1.9.3.tar.gz

cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_gridcell/v1.0/tar_installs/glusterfs-splitbrain-master.zip
unzip glusterfs-splitbrain-master.zip
cd glusterfs-splitbrain-master
python setup.py install 
rm -f glusterfs-splitbrain-master.zip

cd /tmp
/usr/bin/wget -c http://192.168.1.150/netboot/distros/centos/6.6/x86_64/integralstor_gridcell/v1.0/tar_installs/cron_descriptor-1.2.6.tar.gz
/bin/tar xzf cron_descriptor-1.2.6.tar.gz
cd cron_descriptor-1.2.6
python setup.py install
cd /tmp
rm -rf cron_descriptor-1.2.6*

#Turn on the appropriate services and load the appropriate kernel modules
chkconfig glusterd on
chkconfig tgtd on
chkconfig ntpd on
modprobe ipmi_devintf

#Setup the rc.local
rm -rf /etc/rc.local
ln -s /opt/integralstor/integralstor_gridcell/defaults/rc_local/rc.local /etc
rm /etc/rc3.d/S99local
ln -s /etc/rc.local /etc/rc3.d/S99local
chmod 755 /etc/rc.local


#Configure salt
service salt-master stop
sed -i '/#file_roots:/a file_roots:\n\  \base:\n\    \- \/srv\/salt' /etc/salt/master
sed -i '/#file_recv: False/a file_recv: True' /etc/salt/master
chkconfig salt-master off
service salt-master start
chkconfig salt-minion off
service salt-minion start
# ###End of editing the /etc/salt/minion file. ###

#Configure nginx
sed -i 's/conf.d/sites-enabled/g' /etc/nginx/nginx.conf
mkdir /etc/nginx/sites-enabled
ln -s /opt/integralstor/integralstor_gridcell/integral_view/integral_view_nginx.conf /etc/nginx/sites-enabled/

#Configure uwsgi
mkdir -p /etc/uwsgi/vassals
ln -s /opt/integralstor/integralstor_gridcell/integral_view/integral_view_uwsgi.ini /etc/uwsgi/vassals/
rm -rf /etc/init.d/uwsgi
ln -s /opt/integralstor/integralstor_utils/scripts/init/uwsgi /etc/init.d/

#Configure ramdisks
rm -f /etc/init.d/ramdisk
cp /opt/integralstor/integralstor_utils/install/scripts/ramdisk /etc/init.d/ramdisk
chmod 755 /etc/init.d/ramdisk
touch /opt/integralstor/ramdisks.conf
chkconfig ramdisk on

#Log rotation 
cp -f /etc/logrotate.d/* /etc/logrotate.d_old/
cp -f /opt/integralstor/integralstor_gridcell/install/log_rotate_files/* /etc/logrotate.d/


#Configure crontab
(crontab -l 2>/dev/null; echo "SHELL=/bin/sh") | crontab -
(crontab -l 2>/dev/null; echo "PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin") | crontab -

#Add users and groups
sed -i "s/UID_MIN.*/UID_MIN		1000/g" /etc/login.defs
sed -i "s/GID_MIN.*/UID_MIN		1000/g" /etc/login.defs
groupadd integralstor -g 1000
useradd integralstor -g 1000
echo "integralstor123" | passwd --stdin integralstor
echo "integralstor    ALL=(ALL)    ALL" >> /etc/sudoers

#### Configure network interfaces ifcfg-* files #
ACTIVE_INTERFACES=`ifconfig | awk -vRS= -vFS="\n" '{ if ( $0 ~ /inet\ addr:/ ) { print }}' | sed 's/[ \t].*//;/^\(lo\|\)$/d'`
for IF in $ACTIVE_INTERFACES
do
echo "Configuring $IF to be static address" >> /root/post_install.log 2>&1
rm -f /etc/sysconfig/network-scripts/ifcfg-$IF
cat >> /etc/sysconfig/network-scripts/ifcfg-$IF <<EOF
DEVICE=$IF
HWADDR=`ifconfig $IF | grep HWaddr | awk '{print $5}'`
ONBOOT=yes
BOOTPROTO=static
IPADDR=`ifconfig $IF |awk 'BEGIN {FS = "[: ]+"} ; /inet addr/{print $4}'`
NETMASK=`ifconfig $IF |awk 'BEGIN {FS = "[: ]+"} ; /inet addr/{print $8}'`
EOF
GATEWAY_IP=`netstat -nr | awk '{ if ($4 ~/UG/) print; }' | awk -v CUR_IF=$IF '$NF==CUR_IF {print $2};'`
if [ ! -z "$GATEWAY_IP" ]
then
cat >> /etc/sysconfig/network-scripts/ifcfg-$IF <<EOF
GATEWAY=$GATEWAY_IP
EOF
fi
cat >> /etc/sysconfig/network-scripts/ifcfg-$IF <<EOF
TYPE=Ethernet
NM_CONTROLLED=no
USERCTL=no
PEERDNS=yes
IPV6INIT=no
EOF
done

#### Setting the Hostname by extracting the last two mac fields and setting it to "gridcell-xx.integralstor.lan" ###
#Extracting the last two mac fileds for hostname
STRING=$(ifconfig | grep em1 | head -1 | awk '{print $5}' | awk -F ':' '{print tolower($5 $6)}')
hostname="gridcell-"$STRING".integralstor.lan"
echo "Hostname will be : " $hostname ; echo
echo "HOSTNAME=$hostname" > /etc/sysconfig/network
echo "NETWORKING=yes" >> /etc/sysconfig/network

# Editing /etc/hosts
echo "127.0.0.1   localhost   localhost.localdomain   localhost4    localhost4.localdomain4" > /etc/hosts

# ###Performance Tuning  ###
/usr/bin/tuned-adm profile throughput-performance	
chkconfig tuned on		

# ### Disabling the OPenGPGCheck and reloading the abrtd service ###
if [ -e "/etc/abrt/abrt-action-save-package-data.conf" ] ; then
  sed -i 's/OpenGPGCheck = yes/OpenGPGCheck = no/' /etc/abrt/abrt-action-save-package-data.conf 
else
  echo "No such file found : /etc/abrt/abrt-action-save-package-data.conf"
fi


# ### Reconfigure sshd  ###
/etc/init.d/sshd stop
sed '' /etc/ssh/sshd_config > /etc/ssh/original_sshd_config
sed '/#PermitRootLogin/a PermitRootLogin no' /etc/ssh/sshd_config > /etc/ssh/temp_file
echo 'AllowUsers integralstor' >> /etc/ssh/temp_file
rm -f /etc/ssh/sshd_config
mv /etc/ssh/temp_file /etc/ssh/sshd_config
/etc/init.d/sshd start

# ###Editing the /etc/yum.repos.d/CentOS-Base.repo
# ..to disable base, updates and extras repositories. ###
cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/Original-CentOS-Base-repo
sed -i '/\[base\]/a enabled=0' /etc/yum.repos.d/CentOS-Base.repo 
sed -i '/\[updates\]/a enabled=0' /etc/yum.repos.d/CentOS-Base.repo 
sed -i '/\[extras\]/a enabled=0' /etc/yum.repos.d/CentOS-Base.repo
sed -i '/\[centosplus\]/a enabled=0' /etc/yum.repos.d/CentOS-Base.repo
sed -i '/\[contrib\]/a enabled=0' /etc/yum.repos.d/CentOS-Base.repo

mv /var/lib/glusterd/hooks/1/start/post/S29CTDBsetup.sh /var/lib/glusterd/hooks/1/start/post/unused_S29CTDBsetup.sh
mv /var/lib/glusterd/hooks/1/start/post/S30samba-start.sh /var/lib/glusterd/hooks/1/start/post/unused_S30samba-start.sh
mv /var/lib/glusterd/hooks/1/stop/pre/S29CTDB-teardown.sh /var/lib/glusterd/hooks/1/stop/pre/unused_S29CTDB-teardown.sh
mv /var/lib/glusterd/hooks/1/stop/pre/S30samba-stop.sh /var/lib/glusterd/hooks/1/stop/pre/unused_S30samba-stop.sh
mv /var/lib/glusterd/hooks/1/set/post/S30samba-set.sh /var/lib/glusterd/hooks/1/set/post/unused_S30samba-set.sh

cp -rf /opt/integralstor/integralstor_gridcell/defaults/db /opt/integralstor/integralstor_gridcell/config
cd /opt/integralstor/integralstor_gridcell/config/db/
mv -f integral_view_config.db integral_view_config.db.bak
sqlite3 integral_view_config.db < integral_view_config.schema

%end
