%include /tmp/part-include

# platform=x86, AMD64, or Intel EM64T
# version=1.0

# Firewall configuration
firewall --disabled

# Install OS instead of upgrade
install
unsupported_hardware

# Use network installation
url --url="http://10.1.1.1/netboot/distros/centos/6.6/x86_64/iso"
repo --name=extrasRepo --baseurl=http://10.1.1.1/netboot/distros/centos/6.6/x86_64/fractalioandthirdparties/

# Root password
rootpw --iscrypted $1$NdB3lmS6$oXH5W2QCg4d6syxgE1GTA0 

# System authorization information
auth  --useshadow  --passalgo=sha512

# Use text mode install
text

# System keyboard
keyboard us

# System language
lang en_US

# SELinux configuration
selinux --disabled

# Do not configure the X Window System
skipx

# Installation logging level
logging --level=info

# Reboot after installation
reboot

# System timezone
timezone  Asia/Kolkata

# Post installation section. You can specify any commands you want executed once
# installation has finished in this section. In this example, the system is
# updated and the output is logged to the post_install.log file.
# Keep in mind that any commands that execute in the post installation section are
# chrooted by default.

%post

# ### Adding a user called fractalio. ###
useradd -p gmNCe6J1fx4dw fractalio
echo "fractalio    ALL=(ALL)    ALL" >> /etc/sudoers

# ### Writing a file to indicate Primary or Secondary or Normal node ###
(echo "roles:" && echo "  - secondary" && echo "  - master") >> /etc/salt/grains

# ### Editing ifcfg-* file #

ACTIVE_INTERFACES=`ifconfig | awk -vRS= -vFS="\n" '{ if ( $0 ~ /inet\ addr:/ ) { print }}' | sed 's/[ \t].*//;/^\(lo\|\)$/d'`
for IF in $ACTIVE_INTERFACES
do
echo "Configuring $IF to be static address" >> /root/post_install.log 2>&1
rm -f /etc/sysconfig/network-scripts/ifcfg-$IF
cat >> /etc/sysconfig/network-scripts/ifcfg-$IF <<EOF
DEVICE=$IF
HWADDR=`ifconfig $IF | grep HWaddr | awk '{print $5}'`
ONBOOT=yes
BOOTPROTO=static
IP="10.1.1.5"
IPADDR=$IP
#IPADDR=`ifconfig $IF |awk 'BEGIN {FS = "[: ]+"} ; /inet addr/{print $4}'`
NETMASK=`ifconfig $IF |awk 'BEGIN {FS = "[: ]+"} ; /inet addr/{print $8}'`
EOF
GATEWAY_IP=`netstat -nr | awk '{ if ($4 ~/UG/) print; }' | awk -v CUR_IF=$IF '$NF==CUR_IF {print $2};'`
# The variable $GATEWAY_IP might be empty if all/some subgroup of interface(s) connect to the same network subnet or if some interface(s) has
# an unspecified/no gateway.
if [ ! -z "$GATEWAY_IP" ]
then
cat >> /etc/sysconfig/network-scripts/ifcfg-$IF <<EOF
GATEWAY=$GATEWAY_IP
EOF
fi
cat >> /etc/sysconfig/network-scripts/ifcfg-$IF <<EOF
TYPE=Ethernet
NM_CONTROLLED=no
USERCTL=no
PEERDNS=yes
IPV6INIT=no
EOF
done

# ### End of editing ifcfg-* file. ###

# ###Performance Tuning  ###

# This command will automatically start tuned services. 
/usr/bin/tuned-adm profile throughput-performance
service tuned restart
chkconfig tuned on

# ###End of performance tuning ###


# ### Editing the /etc/sshd/ssh_config file ###

/etc/init.d/sshd stop
sed '' /etc/ssh/sshd_config > /etc/ssh/original_sshd_config
sed '/#PermitRootLogin/a PermitRootLogin no' /etc/ssh/sshd_config > /etc/ssh/temp_file
echo 'AllowUsers fractalio' >> /etc/ssh/temp_file
rm -f /etc/ssh/sshd_config
mv /etc/ssh/temp_file /etc/ssh/sshd_config
/etc/init.d/sshd start

# ### End of editing /etc/sshd/ssh_config file ###


# ### Editing the /etc/yum.repos.d/CentOS-Base.repo
# ..to disable base, updates and extras repositories. ###

sed '' /etc/yum.repos.d/CentOS-Base.repo > /etc/yum.repos.d/Original-CentOS-Base-repo
sed '/\[base\]/a enabled=0' /etc/yum.repos.d/CentOS-Base.repo > /etc/yum.repos.d/new1
sed '/\[updates\]/a enabled=0' /etc/yum.repos.d/new1 > /etc/yum.repos.d/new2
sed '/\[extras\]/a enabled=0' /etc/yum.repos.d/new2 > /etc/yum.repos.d/new3
rm -f /etc/yum.repos.d/CentOS-Base.repo
mv /etc/yum.repos.d/new3 /etc/yum.repos.d/CentOS-Base.repo

# ### End of editing the /etc/yum.repos.d/CentOS-Base.repo ###


# ### Editing the /etc/salt/minion file. ###

/etc/init.d/salt-minion stop
sed '' /etc/salt/minion > /etc/salt/backup_minion
sed '/#master:/a master: 10.1.1.200' /etc/salt/minion > /etc/salt/new1 
rm /etc/salt/minion
mv /etc/salt/new1 /etc/salt/minion 
rm -f /var/run/salt-minion.pid
/etc/init.d/salt-minion start

# ### End of editing the /etc/salt/minion file. ###

# ### Performing NIC Bonding ###

cd /tmp/ 
/usr/bin/wget http://10.1.1.1/netboot/distros/centos/6.6/x86_64/fractalioscripts/nic_bonding_tool.py
cd
path="/tmp/nic_bonding_tool.py" 
/usr/bin/python /tmp/nic_bonding_tool.py -C 6 100 200 200
rm /tmp/nic_bonding_tool.py

# ### End of performing NIC Bonding ###

%end

%packages 
@core
@Compatibility libraries
salt-master
salt-minion
tuned

%pre

#!/usr/bin/bash
DIR="/sys/block"
MINSIZE=150	
PATH="/dev"

# Running a for loop on disks

for DEV in sda sdb sdc sdd sde ; do
  #Command to get size of the hard disk
  SIZE=`/usr/bin/cat $DIR/$DEV/size`
  GB=$(($SIZE/2**21))
  #echo $GB $MINSIZE
  if [ $GB -lt $MINSIZE ] ; then
    ssd=$PATH/$DEV
    echo $GB $MINSIZE $ssd
    break
  fi
done

### we now have device name of SSD drive (sda/sdb/sdc, etc) ####

echo "#partitioning scheme generated in %pre for 3 drives" > /tmp/part-include
echo "bootloader --location=mbr" >> /tmp/part-include
echo "zerombr" >> /tmp/part-include
echo "clearpart --all" >> /tmp/part-include
echo "part /boot --fstype ext4 --size 512 --ondisk $ssd" >> /tmp/part-include
echo "part swap --fstype swap --size 16384 --ondisk $ssd" >> /tmp/part-include
echo "part / --fstype ext4 --size 1 --grow --ondisk $ssd" >> /tmp/part-include

%end
