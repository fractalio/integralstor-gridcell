"""Routines that execute various gluster snapshots commands

This exports:

  restore_snapshot - Restore to a particular gluster volume snapshot.
  deactivate_snapshot - Deactivate  a particular gluster volume snapshot.
  delete_snapshot - Delete  a particular gluster volume snapshot.
  activate_snapshot - Activate  a particular gluster volume snapshot.
  create_snapshot - Create a new gluster volume snapshot.

"""

from integralstor_gridcell import xml_parse

def restore_snapshot(snapshot_name):
  """Restore to the snapshot with the given name

  If the command runs without an error, it returns a dict with the return status and the xml root
  snapshot_name - the name of the snapshot.
  """

  d = None
  try:
    cmd = 'gluster --mode=script snapshot restore  %s --xml'%snapshot_name
    d, err = xml_parse.run_gluster_command(cmd)
    if err:
      raise Exception(err)
  except Exception, e:
    return None, 'Error restoring snapshot : %s'%str(e)
  else:
    return d, None

def deactivate_snapshot(snapshot_name):
  """Deactivate the snapshot with the given name

  If the command runs without an error, it returns a dict with the return status and the xml root
  snapshot_name - the name of the snapshot.
  """

  d = None
  try:
    cmd = 'gluster --mode=script snapshot deactivate  %s --xml'%snapshot_name
    d, err = xml_parse.run_gluster_command(cmd)
    if err:
      raise Exception(err)
  except Exception, e:
    return None, ': %s'%str(e)
  else:
    return d, None

def delete_snapshot(snapshot_name):
  """Delete the snapshot with the given name

  If the command runs without an error, it returns a dict with the return status and the xml root
  snapshot_name - the name of the snapshot.
  """

  d = None
  try:
    cmd = 'gluster --mode=script snapshot delete  %s --xml'%snapshot_name
    d, err = xml_parse.run_gluster_command(cmd)
    if err:
      raise Exception(err)
  except Exception, e:
    return None, 'Error deleting snapshot : %s'%str(e)
  else:
    return d, None

def activate_snapshot(snapshot_name):
  """Activate the snapshot with the given name

  If the command runs without an error, it returns a dict with the return status and the xml root
  snapshot_name - the name of the snapshot.
  """

  d = None
  try:
    cmd = 'gluster --mode=script snapshot activate  %s --xml'%snapshot_name
    d, err = xml_parse.run_gluster_command(cmd)
    if err:
      raise Exception(err)
  except Exception, e:
    return None, 'Error activating snapshot : %s'%str(e)
  else:
    return d, None

def create_snapshot(vol_name, snapshot_name):
  """Create a snapshot with the given name

  If the command runs without an error, it returns a dict with the return status and the xml root
  snapshot_name - the name of the snapshot.
  vol_name - the volume on which the snapshot needs to be taken.
  """

  d = None
  try:
    if (not vol_name) or (not snapshot_name):
      raise Exception('Required parameter not provided')

    cmd = 'gluster snapshot create %s  %s --xml'%(snapshot_name, vol_name)
    d, err = xml_parse.run_gluster_command(cmd)
    if err:
      raise Exception(err)
  except Exception, e:
    return None, 'Error creating snapshot: %s'%str(e)
  else:
    return d, None


